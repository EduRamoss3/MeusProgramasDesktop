<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxITEBUQEBMVFhUVFRUVFRcWFRcVFRcVFxUWFhUVFxUY
        HSggGBolHRUVITEhJykrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhsQEBotJiAlLS8tLS0tLS0tLS0t
        LS0tLS0tLS0tLS0tLS0tLS8tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCACiATYDAREAAhEBAxEB/8QA
        HAAAAgMBAQEBAAAAAAAAAAAAAAECBAUDBgcI/8QAPxAAAQMBBQQHBwIFAwUBAAAAAQACEQMEEiExQQVR
        YXEGEyIygZGxI0JScqHB4dHwFDNigrIkc5IVQ6LC0gf/xAAaAQEBAAMBAQAAAAAAAAAAAAAAAQIDBAUG
        /8QAOxEAAgEDAQUGBgAEBQQDAAAAAAECAxEhMQQSQVHwMmFxgZGhEyKxwdHhBSMzQlJicrLxQ4Ki4hQV
        JP/aAAwDAQACEQMRAD8A8yvqj44EKJACAAEFx3oyUJa4g9C2C6Dl5IL21BszH0QO2pJ9Mcju/KEUjk4K
        maZFCggGAgAuQWIoUSFBAJACFEhCV7f5oLchFqC5BCghQKARQokA5QAgEQgEChbEsDw9EJlEHCEKmJCg
        hRIBIAQGmhxghRICQIhQmSJKpbEUKBQCQp0bV/evmoYONxObOIM+qFTtgje3qlsKFC3EqCJKFQIUSAEK
        CASFEgBACAUoBoCJQokAIUSAEAkKMOQlhxOSC9tQeyBnjuQKV2RDkK0ETkgvbUgUMhIAQAgNNDkEgG1s
        4KEbsJzSFSp3EhRIBIUEAIABQE4kScOP7zUMdNDkqZiQAhQQCQpJlMlDFySO7aUBDW5XZUQ3ggBAJAJA
        CFCUAOhArkUKCASFBAMBCNhe3ILcwvb0FuQizchU+ZFCjDt/5QluQFmoxQqfMghRIU1EOMSA72Bs1ADk
        SPUKPQxqaFl9Ce7jwOf5UuaVIp1KKptUuZxIVNiEhQQDa0lQjdiUgcT9PyhMsg50qmSViKFEhQQDDZQj
        djtTooa5TL9h2dUqmKbSd+4czkFhKSjqa3I5FmB5FZGO9ky1TtBAIoDt1UgFDXv2Zyc0jNDYncihRIBI
        UEAIUSAEAkKCASAAUBO8Dn5/hCWa0IuYUKncGtjEmPVCN3wJ7pQqViCGRpocYkBa2b/MH73KM1V3aBs2
        e0upsya5rnODmuEgwG+IOOYIK1uKbOdMp1Wy284ZkgRmIg56567ll3GadkVKtnwkYj05jRW5sjIqvpqm
        1SOapmSfVJUMVFI5qmYIBIAAQp1ZS3oYOZ3axQ1OR9O6LbNpU2U3NaLzmAuccSSWyROg4Lz6827oyo9t
        GntGGycALuOQGq108iviXkfLXMwPIr0zkUsowVkemCASA1LLZi5hI91oceUhvq4LFuxyyfzM4VKapkpF
        apR3Km5T5nEhDNCQoIBIUEAIBIUSAEAIUSAbXkZIRpMRKFIoUEBpocYkKXNkj2o5foozn2n+mb1KwufT
        vDBjHOLnbgQ3TM5LU5qL7zTSg5q/Bas5VajLgaKYLbzsyb5wbjIMA+Ec9Si73ubPix0Uce/XWTrY+opt
        PXNc4Pkseww8R+ZBzy1UlvS08zF2U+atj36/Jl2qkwkls3ZIa4iCcu80ExnotivxM0yjWs5GfgRl5rK5
        tjIrOYQqbE7kEMgQEmU5QjlY3Ng7AdaJIIawGCczyA1WqpVUDTKTNfaHQqsx46oh7D7x7Jb8w/RaobTF
        rOplUhKOTK2ns3qanVzegAzEZiVuhPeVzQ2etobfp0KVMDtvFNoug4A3QMTouV0XNsQq7jTK9Oy2m3+0
        c9rWXrobjAgtGAGffGZ3rJyhRwl10hadZ3vxt9PyYVssbqZcx4ggT4ESD5ELojJSV0czupWZ5NbD2BIA
        QHptis9k/wD2m6T/ANymtc9V1wZ59R/NLriiNezAycsuWW/TxVTMFUZQtFlIPiQskzojNFOpTVNsZFd9
        OENylc5oZiKAEAkKCASAEAkKJACAYCC47vH980JciQhkaJQ4wQpq7OsdRlRrqlN7Q5pc0uaWhwwxaSMV
        hvJ4TOfa01S8dD0+z6jqbbzcWlxx4wMCNFqnFSdjhp1p0/mtgjbLGyqL1OGukmMmk4TyP0UTcNTdvRqO
        8cMqU9mVXM6rq3TeLm4awMJ3GI5gLJzivmuZ04ylJwt3rrvKFtsNSmwCoxze0e80jQarKM4yeGVxlF5R
        zs4phh6y9JkNLYIkAEXmnMY7xGeOSrvfBUyi6iCJGHA5TwP6rK5sUijXZBhU3xd0clTIt2dvZH71UNNR
        5PddB2+xf8/2XJtGqNVzb250go0m3Ab7/hbkPmdpyWilRlJ34G+vVju7q1PG2llau99Vzcmhx0AZIaCJ
        zzC7U4wSRxO7u/M0rbsJtGtRk3qdRzZBziGF0xxcclrhVc4vmv2ZVIbklfR2+1/qb9t2kygy7TAZAF1o
        757mMYhuLQZdJO5aIU3N3eemWpWUVaGPrw9NL5y+R55lhq2kuqGGMiHVHEhjQBHecccNJXS5xpq3saKV
        OdWV1otXwXi39NTy3SGy2SmWsstSpUIwe50BpO9oAkDmSs6bm1easexKUXL5L25vj4d3iYy2gSA9j0fp
        A0jJAHVNxM/HT3arTUeV4/Znl1Gt+d3b/lF//p4DpLg5ubiM4GMHSTLfFyx33bvNaSune6z14vHm7FG2
        0QHQB2SZbqIMEY6FZxeCt2Zk2uzAAEbsjnmfNZpnTCZSqUTAMGDMHQxn6hW5uUitUpKm2Mzg5hCG1NMi
        hkJAJACAEKJAJASjehL8hFyFSIoUkH+KpN00FDlBAej2R0rqMb1NcCrS+F2nFpzC0ToJvejhmLvufDeY
        8m/o+H0NtlipVxfsb72ppOgVBy+LwWHxHHFRefD9HDPY280nfufa9OPl6FRzwBdcHB4Jnd/xjAravY47
        K2NSzQtrmAOMkGcdDksJQUsGylWnCe8+RuWXarXth8QZBvCWuym8PFcsqTjoetS2qFR/MYm3dgtu9ZZy
        27JLmz3cBi2dOeXLLdSrPSRKtBXvBqx520WYtpidXHEEEHAZEYFdCkmznd4uzMnaP8wnfJ+pWa0Omk7x
        uVVTaaNiZ2B4+qhyVX8xq2e01WUyxhIY44xhJjKfssHFN3ZobNWt0cfTovq1COyGFsYh16JndF4LUq6l
        JJGUqUoxbfcenpWymyjTcQ0ezptLnDO6KZAAzfBacBhjmuZwbk13/k2fGUYprWyWf+1+en7MG11qlpqt
        FEPcW5EnHQXsMGDAeS6YqNOLcjjbnVkoxu37+2nVzja69lsuNZwr1vgaewD/AFP97kFE5z7OFz4+SOqn
        ssU/n+Z8k8ecvsvU8ttrpHXtBhzrrB3WNwaBwAW6FKMNDt3b2vw0Swl4IxythmIoDS2Dsc2moabalNhi
        R1hIDjo0EDMrXUqbiva5Y2clFu1+f0PR0LNVs0U6jS14aGkYEHLmHNw9FjeM1dHj196FaS43ZdFZrmFg
        IbJaTncJ3BxxZO44SNIWNmnc13Ti4rH0/XXI5lg7LKocCCYcCO6TOUdsTJwOMq51iVSSSjNPx7vQpbUs
        d1ghwOhu4gOkmJ8cxx3Kwldm5fLbPX3NXY9ClWs7acNLxIxAJBMgOjXAjHHIZQtNRyjK/A6IZWNTzmz9
        iurVHU2ObLQ4gnJ0ECMOa3zqKCuzKnebsjHtlAtkEQRIPMLYnc2Qlkz1TqBAJACASFABAxyhLEShkJAM
        BAOAM/ohMvQ0EOUEAkB0s9ocxwcxxBGoKjVyOKZ6uw9KadUCnbmToKrcKg5/EOfmud0XHNP04fo11aca
        n9RX/wAy7Xnwl9e80LRs94p36D+tozMt0Me+z3TCRqJu0lZnDV2ecI3vePNaea1T8fUp3hcEOhwcezGG
        MYh3gtnE59FqWKG0HNAnefKAsJU0zfS2iUXfUztpU2xLMAXExuMCY4LON+JfiRlUe7yPO7UEVPD7lbEd
        2z5gU1ToNjZzfZjx9SsWcFd/Oz22xWUnWItqNkB73HS6JpGb0YEgEb81yVN5VLrrUkJR+E1Lnf8A2/vv
        K21NrOrAUmAkYDCRMRENGeWs+Czp0lHJpq1nLHXXj7CqWJlIB9uqluAu0wZqEaDHuDmnxHLFNefD9m2O
        yvWq2u7+5+XDz9DD270nq3TRoMFGkdG5uG9z/e9FnCir70ss66W647sMLilq/wDU9X4adx5VziTJW83p
        JaCQoICJcJiRJyUcknZsyUW1dIk1xBkGCqYtJqzPT7J6XuDRRtTRWpZCe+35XZhaJUc70MM1zpqStJXX
        uvB/bQ3G7PZWb1lif1gzNMwKjf7feHJYfEccVFbv4HBPZJLNP5ly/uXiuPivRFWnaCOw4YSZa7ujlq08
        lsceJzKWLaoVpummbpwIHZd3gQc2nJ2ZGhxOCivfJnGyTt6FS1Uw0tFMFpuzek9qRPhqs1nUsZ8WaGwr
        T/DgPqUpY7EVAAXN0OO7gtNWO/hM6qNZQeUed29TYHP6t99sSHEEHETjOq3wbtlGyFlPDueeWZ3E6LZM
        IYydkSqUdyEjPmcShmJCiQEg7ehLcgLNRigvzJkg97Dln4oYq60IP4ZIZI5qmZpqHGJACASFBAXdl7Xr
        Wd1+k8tP0PAjULCcIzVpIlmnvRdn16nq7Jtiy2rCqBQrH3mj2bj/AFN93mFocZ09Mr3/AGc1XZ6c89l8
        12X4r+3yx3E7dY6tJoa8AsJvNcAHNPyvGnBZQnGbuuvI4qtKdP5Zq3J8/B8UU6lGWAgjvHsz2hhu1HFZ
        3zYwS3fmZ5vbIir4fcrYj09k/plFU6Te2S32TfH/ACKwZ5m0v+Y+uB6OybNead6s/qqAMy8wCdbrM3GA
        tMqiTsldmNOhOot7SPN6eXFvw9ihb+ldOiDTsLIORrPxefl0aOXmioueaj8uH7O+lSjT/prP+J6+S0j9
        e88habS+o4ue4uJxJJldKSWhuUUh0bSQIOLfhOI/B4hQwnSUs6PmdatmBZ1jZA3O/wDU6oYRqNS3JZ8P
        vyKap0E6bJIkwJEmJgE5qPBUrs+h0egzXWOq1obf603H1Gi+Cw3RBAkNddceAfqvka38Xj/8iNdr5YpX
        t/mV/a/qj6elsFtmnRTy27X7nb3t7nz60WdzHOY8Q9jrpG4iZ9F9ZTqRqRU4O6auj5mcHCThLVHArMh1
        slrfTcH03FpGRBhRpNWZJRTPYWHpVSrgMtzYdkKzAA7+4ZOH1XO6UoZp+n45GitRjUzNZ/xLXzWj9mXL
        bslzWdZTcKtLR7MQODhm081YVU3Z4fI8+rQnSW88x5rTz5PuZQbXcG3YBziRJE7lssabJm1si1UzSFMk
        SBBBwn9VonF3ubUzym3WCasCBjAiPouiGiOig/mR5pZnqHaxjt+BQ11eyexqbHp1GNODSGOc52AAugFr
        Y1JxEnXVc++0zk37Pkee2nsipSMPb488uX30W6M1LQ3xqcDKfSIWRvUkzmhkBQoAoBKgA6EDVyWB4eiE
        yjQUOUSASFBAJACAEKbWxek1ah2JD6Z71N/aafA68VqnSjPPHmY7tlZacnlPy4eKyeks4s1rE2Zwp1Na
        TzgT/Q8+hWrenT7eVzX3Rxz2RSf8rD/wt/7ZcfB2fezyvSWyPp1rtRpabozEanLet8JKSumb9ljKMGpK
        zvxK2yNnGvVFJrmMnEue660AakpUnuK9r+B0qzaTaXjhHqX7Qsdhb1dH/U1R77hFMHWGa+P1WhKpU7Xy
        r3NM6VF1HKPzePZ9OPnjxPL7W2xWtDr1Z5dw0A3AaBb4QjBWijZZt70nd9acvIz1mZHSlZ3OyHPcOJOi
        GEqkY6naWM/rd/4j/wCvTmoa/nn3L3/XWhwrVnOMuP6AbgNAqboQjFYIMGKFkdYwI3oY3PsPRPavX2Fl
        97HVQ432gi8ALzWFzRiJAzXwP8W2SOzuUIKy3k/WP5ufX7BtMq0Iyk82+58x6Vj/AFtf/cK+u/hStsVL
        /Sj53+IP/wDTPxMmvj5AeQhegjki7s4IZggNLY+3K9mdepPI3jMEbiMisJ04zVpIx3bO8XZ9ariewse0
        LLa2y8Cz1cr0exceI9w/RaGqlP8AzL3/AGcNWhTk7K0X/wCL+8fdeBX2jsupSMPbge64YtcN4cMCtkKk
        ZrByThOnLdmrffw5+RkbRZ7N/wApWxG2g/5i8TzKyPYLWzRNQcijNO0O0D6HZG9lkCSKdSJm6zsgkgE9
        +BOGPZyK5H9zgbvp368PDv4na5IugXhiLjs594NiJO8NgnVhU7+uurlT4L0/H680eQ2js8AkkXJJhw7V
        M8DA7J8PALojI3xmY1qsRb3hE5EYg8iMCs07nRGoU3MIVNyaZFCgqURQCQprQDwWJwZRFwVMkyKFBASD
        d/5UJfkF0HLyQl2tSBCpmJANjyDIMFA0mrM9FZ+ltQ0TZ7S1tZhENviXMOUtdmCtD2eO9vRw+4vxKqg4
        JprvzbwepiPs5HapmRwwI5jT0W40qon8s1ZlUqm4bWkmAJKBtLLLIoNZjUMn4Rn4nT15KGnflPsep3ft
        O+wUntAa2btwAETvPv8AiZ4qKNncnwZJqSee/wDJUq2UgXmm83eNOY0WRsjVTdnhlYobTpZxLoQxnoen
        2X0VqPh1XsNMGPfIPD3fHyXNPaEuzkyhRb1MbpLsx7LXWFkvM6tlnpwxxa5xqtY3MEZuXlVv5jbnk9Si
        91JQPb7V6MGsG1mEXzTN5ju6XOvukHQy+ceGS69nqqlBQ4Kxy7RH4k3Pizwm1LDUoksqsLHCMDu3g5Ec
        QvRhNSV0cai4yszOWRsO1ls7qjg1uu/ADiScAOKN2MJzUFdlu12QUHXXw93AyzmHDveGHNRO6ualOVRt
        LCWCjVrucZJyy0A5DRU3QpxisG5sPpZWoDq3xVpHOm/EeG48QtU6MZO+j5kdPG7quT0/T70ehNks9tpu
        FjeGVHAjqajoxPwP15HFanUlT7auua+6OaGyL4sdx2zo/s9H7PxPDbR2dVoVDSrscxw0cI8QdRxC6ITj
        NXiz0JRcXZrJPY49qOR9Fkzl2p/yz6HZ2y1uvs3kDwHbfhkDjBkZ5LkeH5nnN7y54fl49eh3eJGPaEYn
        JwbxmezzvN3FqmnXX2fiW91nK9115rvR5+o268hvs3HNr8aVQb9Y+vNbtVzM0ytUoCbkdW450340ncWu
        9394q346mxSMy17OxugFjvgdr8rsj+81kpG+NQya9mLSQQQRoVmdEZ3K5CpsWSKGQIDTUOIYcoSw7uqC
        4r0ZIW19SBKpQQpK/v8AyhjbkHVzlj6+Sg3ranMhUzBAOnULTIMHghJRUlZlnrmP/mCD8TQMebcvRQ1b
        k4dh+T/JF9qgXaYujf7x5n7BLFVK+Z5+hVJVNwkKTpVnNMtMIYygpKzNrY+xHWuSxtwAw5/uTgSLucwZ
        ww5LTVrRp6mdDZqsnh/L39Z6ye22T0Zo2cBzRefq92f9oyauGVeVR50O6rQjThjW5tUKW/cVrbNMO881
        tGwvc221wxwZ1VKpTvC4XVKJvk3TiP5dPMBYzhbjqbYT0twPT7DF+zUH/FRpO82NP3UuR5LVp2XRtDeq
        r0w9pBzzB3tcMWniE35QzFmdCKnO0keD2/8A/nDqV6rZnOq0wCerMCoOTsnD68CuyjtqlieGY7Tsc1ml
        79Z9jwtW1kiG9lu4fc6rvPPjSSd3lhRtZGB7TdxxH4PEJYSpJ5WHzJmztfjSOPwHPwPveqGPxJQxP160
        Kj2kGChvTTyh06haZaSDwQSipKzLG0NpVa5aazy4tEAkyQN2KkYqOiJGNne7fi7npNkdF3FjbTRqsq9k
        9Yxs9Ywnh7w4rS6yUt2StyfBmnaVv0HKLvbVcV5cu827JbW4Nd2Ya4Ye84iBJJwGmhg5lRwfA8hyv+vv
        3fY0SMid+D27+Iw7X/F3zLV3e3X7XgZ34v1XS+z8TCe2S5re1iZpVM53sJ/BW4yUji1ki43tDWjUwcPk
        cr3v1NikKyjtBrHSA4Hq6k36ZBzYQJMcPJSWmTPe4lzaGz6dRji9uMkBzYAwGQyGGeGWMtnLCMmnjrrp
        mcZtNdLrqx8+tQg+C60d9N3RwQ2iQGoAocQ1ARJVKkJAJCggBADXQgauDnTiUCViJQoIUEAkKJACASA+
        gdAA4WZxy9qf8GLz9r7a8D0Njktx+J7OzWppweI46fhcTT4Hbh4ZofwWEt/fIqKpzOepsvGHoVrRZmOF
        2oxrgCDDmgiRkYK2xk1mLOKWMSRbo0CeA05cAtcpo6aWzznl4R2c9rOf1WvMjujCNNYKNtrksduunDwW
        cY5MZ1Ekfn4iMCvfPFvcFAEoCy21hwiqL253vDx15H6IaXSccwx3cCNWyYXmG83hmPmGnpxQsaud2WH1
        oVkNxZ2ftGrReH0nlpG4wpKKkrMjim78eZ7Kw9J7PaezbG9XU0rMGfzsyPMYrndOcOxlcn9mclbZ4yzL
        D5pfWP3Vn4mhUs1agA9pFSkcA9hvMI1B3cjhwRSjPHHlxPPqUp0svTmsp9cn6FN1S/3hfG7Ko35TqOHo
        s7WMLie28MfatGuVVn6+iad30M1IVJt4tOFVoIhxgVGY4X5wLeeCjx3GxSNSoOy8SQdWiSCIw3nkTPew
        cFq6668jJOz5ddfk+Z7QEP8AD7ldqPToO8SqhvEgNWVicVhQqAhAKUKIhAJCiQAhQQCQoIBIBFCggBAA
        MYoD1fRXpGyk006oIBdN4YjIDEeGYXPXoubujGM5Uuzoe1oWljwHNIIORBkLhlTaOqlt0ZYZcstqczun
        DccvwtUoXPQhXT0Nez7Qpu72BGhE+RWpxa0N6cJZYVrWdMB9UUCTqpFGraAFujTbOCvtsYLU8zt7pbSp
        Asab74IhpwHzO09V109merPMe1VK3Z05/g+W1KhOa9A2xiloRUMxIBICdKqWmWkg8EJKKkrMsdYx/eF1
        3xAdk82jLmPJDTuzp9nK5cfX8+pxtFmc3PI5EYg8ihshUjPQ4IbDX2J0jr2Y+zdLT3mOxa4biDgVhOlG
        epg4a2468U/FaM9dYrZZLZ3CLPW+E/ynHgfc9Foe/T1yvf8AZwVdli+z8r5PsvwfDweO9EbZZ6lJ8Vmu
        a7R4z5gjBwWcZRkrxOKcZQluzVmOjDntJEmRD2SJM5OaIOPgjwgmadQdhwkASey6JBjMSAL2c5HLArVx
        Nif/AA+vx4M+Z7YEVB8o9SuxHq7K7w8ygqdIIDUhQ4glBYM1BoRIVKgQoIQRahUxIURQAhQQCQokAIBI
        AQE6ZwQxZcsO0alEzTcRvGbTzCjinqaqlGNTX14nr9jdKmPhtXsO4nsnkfsfquedDkc29X2fPaj7+h6W
        nbmhc7oM2L+NQSKm1uklOkJccdBm48h91nDZjX/9hW2h2pR83oeF2x0mrVpaDcZuBxPM/YfVdUacYm2G
        y53qj3n7en5MSVsOo4IbBFCggEgBAJCnahanNwzBzBxB8ENc6UZePM6mkx/cN13wk4H5XfY+ZQw350+1
        lc/yvwL+Eu41Td/p94+Gnj9UHxt7FPPfwIVLWcmC6OGZ5nX0QyjSWsss3tidMatJvU1wK1H4H4x8pzae
        S0zoJvejh8xOknHdtdcn9nqvI9LZ7LRtA6ywVO1rReQKg3hpyeFr+I4YqLz4fo8+psb/AOnnufa/EvLP
        cRFvc0GnVbDt5BBByx18MsBELLcWqOVSvh/8dcjwm3hFUfIP8nLoietsTvTfj9kZqp2AgNQlQ4iKFBAC
        FEUAkA2lA0SeB+EImc0MwQCQCQoIAQCQCQEmlAxyhAlAXrLtmvTbcY8xpIDo+WclHFM5qmx0akt6Uc9a
        lKpULiXOJJOZJknxVOmMVFWSwQlChKCxzQ2ABKEuTDQM/L9UMbt6Eaj5OQHJDKMbHNDIEAkAIAJQokAK
        lJ0LQ5jg5jiCMiFLXMZQUlk9ls3pmyqBS2gy/oKrcKrfH3hz81zug45pu3dw/Rz1qCn21fvXa/8Abzz3
        kOkXRapUb/FWNzbRSDYNz+Y0Aky6nnrpPkkdoSe7NWft6m3ZNnlGm7NNX4a6LVao8Uuk3AgNMqHGJAJC
        ggBAMN3oLgXbkFuZAoUEKCASFEgBAJAJACFCUASgCUFhSgsEoUUoLBKCw2s10QN8AdU0GHr5oFHmc0Mg
        QCQokAIAQokAKgSFEhQQFiybQq056t7myIMHMHMKOKephKnGWWViVTMRVKasrA4RFqpbkUKMBBcJQliJ
        KGQIBIUEAkAkKdKbARiYOiGEm1wIPaRmhkmmRQokAIUSAEKJABQCQoIB3UJcMQhcMcg8PT8ITKIuYQhU
        7kEMgKASAEAAIW4EICKpQQHQMBGeO5DByaemDk4RmhmncSFBAJUpprE4gBQWHIQWZElC2EhQQCQAhRIA
        QokAICTammY3IYuIywHu+WvhvQbzWpzIQzQigEgEhQQAhQhCXCdyCxFCjDkFiQZOXkhN62pMuDRGfp5I
        YpOTOd0HLy/KGd2tTmQhlcSAd3ehLhe3IW3MiSqVCQokKCAm2pocR+8ihi48UBpzi3H1Qb1tTkVTMSgN
        RQ4hIUCgEgBCggEhQQCKARQoIAQCQAEB3qd1p1xQ1x7TRXQ2iKFEgAoCdP8AfmhJEH5oVaCQyEgEgAID
        tU7rTzQwj2mcENh1Pd8fshh/cKkMULLQ5EqmSEoUFSiKARQokAIBtKBnW0DLkFEYU+JXVNh//9k=
</value>
  </data>
</root>